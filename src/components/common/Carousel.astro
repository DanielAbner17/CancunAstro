---
import type { Store } from 'src/data/stores';
import CarouselSlide from './CarouselSlide.astro';

interface Props {
  class?: string;
  items: Store[];
  type: 'stores';
}
const { class: className, items, type } = Astro.props;

const importedImages = await Astro.glob<{ default: ImageMetadata }>(
  '/src/images/stores/*.{jpeg,jpg,png,gif,webp}'
);

const images = importedImages.map((file) => file.default);

const itemsWithImage = items.map((item) => {
  const path = '/src/images/stores/' + item.imageName;
  const image = images.find((img) => img.src.includes(path));

  return {
    ...item,
    image,
  };
});
---

<div class:list={[className]} class='carousel-stores overflow-hidden'>
  <div class='flex -ml-4 items-center'>
    {
      itemsWithImage.map(({ image, alt }) => (
        <CarouselSlide image={image} type={type} alt={alt} />
      ))
    }
  </div>
</div>

<script>
  import EmblaCarousel, { type EmblaOptionsType } from 'embla-carousel';
  import Autoplay from 'embla-carousel-autoplay';

  const AUTOPLAY_SPEED_IN_SECONDS = 4;

  const OPTIONS: EmblaOptionsType = {
    align: 'center',
    loop: true,
  };

  const plugins = [
    Autoplay({
      delay: AUTOPLAY_SPEED_IN_SECONDS * 1000,
      stopOnInteraction: false,
    }),
  ];

  const emblaNodes = document.querySelectorAll('.carousel-stores');
  emblaNodes.forEach((carousel) => {
    EmblaCarousel(carousel as HTMLElement, OPTIONS, plugins);
  });
</script>
